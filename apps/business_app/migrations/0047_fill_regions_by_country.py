# Generated by Django 5.0.6 on 2024-12-11 04:41

from django.db import migrations

from apps.business_app.models import region_county
from apps.business_app.models.region import Region


def fill_regions(apps, schema_editor):
    Region = apps.get_model("business_app", "Region")
    countries_by_region = {
        "Africa": [
            "ao",
            "dz",
            "bj",
            "bw",
            "bf",
            "bi",
            "cm",
            "cv",
            "cf",
            "cg",
            "dj",
            "eg",
            "gq",
            "er",
            "ma",
            "et",
            "ga",
            "gh",
            "gm",
            "gn",
            "gw",
            "ke",
            "ls",
            "lr",
            "mg",
            "ml",
            "mr",
            "mu",
            "mw",
            "na",
            "ne",
            "ng",
            "rw",
            "sc",
            "sd",
            "sl",
            "sn",
            "so",
            "sz",
            "td",
            "tg",
            "tz",
            "ug",
            "za",
            "zm",
            "zw",
            "ly",
            "ci",
            "cd",
            "mz",
            "tn",
            "re",
            "km",
        ],
        "Europe": [
            "at",
            "be",
            "bg",
            "hr",
            "cy",
            "cz",
            "dk",
            "ee",
            "fi",
            "fr",
            "de",
            "gr",
            "hu",
            "ie",
            "it",
            "lv",
            "lt",
            "lu",
            "mt",
            "nl",
            "pl",
            "pt",
            "ro",
            "sk",
            "si",
            "es",
            "se",
            "gb",
            "is",
            "no",
            "ch",
        ],
        "East-Asia": ["cn", "jp", "kr", "mn", "tw", "hk"],
        "South-Asia": ["af", "bd", "bt", "in", "mv", "np", "pk", "lk"],
        "America": [
            "ag",
            "ai",
            "ar",
            "bs",
            "bb",
            "bz",
            "bo",
            "br",
            "ca",
            "cl",
            "co",
            "cr",
            "cu",
            "do",
            "ec",
            "sv",
            "gt",
            "gy",
            "hn",
            "jm",
            "mx",
            "ni",
            "pa",
            "py",
            "pe",
            "sr",
            "tt",
            "us",
            "uy",
            "ve",
            "gf",
            "ht",
        ],
        "Middle-East": [
            "ae",
            "bh",
            "iq",
            "ir",
            "il",
            "jo",
            "kw",
            "lb",
            "om",
            "qa",
            "sa",
            "sy",
            "tr",
            "ye",
        ],
        "Central-Asia": ["kz", "kg", "tj", "tm", "uz"],
        "Australian": ["au", "nz"],
    }
    Region.objects.bulk_create(
        [Region(name=region) for region in countries_by_region.keys()]
    )

    RegionCountry = apps.get_model("business_app", "RegionCountry")
    Country = apps.get_model("users_app", "Country")

    created_regions = Region.objects.all()
    region_countries = []
    for region in created_regions:
        countries_code = countries_by_region.get(region.name)
        for country_code in countries_code:
            db_country = Country.objects.filter(code__iexact=country_code).first()
            if db_country:
                region_countries.append(
                    RegionCountry(region=region, country=db_country)
                )

    RegionCountry.objects.bulk_create(region_countries)


def remove_regions(apps, schema_editor):
    Region = apps.get_model("business_app", "Region")
    Region.objects.all().delete()


class Migration(migrations.Migration):
    dependencies = [
        ("business_app", "0046_region_regioncountry_region_countries"),
    ]

    operations = [
        migrations.RunPython(fill_regions, remove_regions),
    ]
